# coding=utf-8

import uuid


def parse_single_db_entry(query_string):
    query_string = query_string.split('\'')[1]
    return query_string


def parse_csv(data_string):
    data_array = data_string.split(',')
    return data_array


def parse_csv_import(data_string):
    data_array = data_string.split('\n')

    for _ in range(len(data_array)):
        data_array[_] = data_array[_].split(',')
        data_array[_] = list(filter(None, data_array[_]))

    return data_array


def remove_first_csv(data_array):
    data_array = data_array.pop(0)
    return data_array


def csv_to_string(data_array):
    data_string = ','.join(data_array)
    return data_string


def remove_first_string(data_string):
    data_string = data_string.split(',', 1)[-1]
    return data_string


def parse_values_from_array(data_array):
    data_string = str(parse_csv(data_array))[1:-1]
    return data_string


def to_messagestring(input_str):
    messagestring = ""
    entries = []

    for _ in range(len(input_str)):
        entries.append(input_str[_][0])
        
    entries.sort()
    messagestring = ",\n".join(entries)
    return messagestring


def single_db_entry_to_string(db_entry):
    string = ""
    for _ in range(len(db_entry)):
        string += db_entry[_]
    return string


def generate_query_string(data_sub_array):
    # this could be done in fewer steps but to visualize the separate parts
    # it's split here
    # !!ATTENTION!! if too much overhead is generated by initializing
    # all those VARS refactor this!

    owner = '\'' + data_sub_array[0] + '\''
    title = '\'' + data_sub_array[1] + '\''
    players = '\'' + data_sub_array[2] + '\''
    game_id = '\'' + generate_uuid_32() + '\''
    query_string = owner + "," + title + "," + players + "," + game_id

    return query_string


def generate_uuid_32():
    return uuid.uuid4().hex
